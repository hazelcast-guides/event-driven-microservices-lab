services:

  hz1:
    image: hazelcast/hazelcast:5.3
    environment:
      JAVA_OPTS: -Dhazelcast.config=/project/hazelcast.yaml
      CLASSPATH: /project/common/target/common-1.0-SNAPSHOT.jar
    ports:
      - "5701:5701"
    volumes:
      - ".:/project"
    networks:
      - hznet

  hz2:
    image: hazelcast/hazelcast:5.3
    environment:
      JAVA_OPTS: -Dhazelcast.config=/project/hazelcast.yaml
      CLASSPATH: /project/common/target/common-1.0-SNAPSHOT.jar
    volumes:
      - ".:/project"
    networks:
      - hznet

  hz3:
    image: hazelcast/hazelcast:5.3
    environment:
      JAVA_OPTS: -Dhazelcast.config=/project/hazelcast.yaml
      CLASSPATH: /project/common/target/common-1.0-SNAPSHOT.jar
    volumes:
      - ".:/project"
    networks:
      - hznet
    profiles:
      - disabled

  mc:
    image: hazelcast/management-center:5.3
    environment:
      MC_DEFAULT_CLUSTER: dev
      MC_DEFAULT_CLUSTER_MEMBERS: hz1:5701
    ports:
      - "8080:8080"
    networks:
      - hznet

  refdata-loader:
    image: amazoncorretto:17
    command: java -jar /project/refdata-loader/target/refdata-loader-1.0-SNAPSHOT.jar
    environment:
      HZ_SERVERS: hz1
      HZ_CLUSTER_NAME: dev
      CARD_COUNT: 10000
    volumes:
      - ".:/project"
    networks:
      - hznet

  event-generator:
     build:
       context: event-generator
     command: python /project/event-generator/event_generator.py
     environment:
       HZ_SERVERS: hz1
       HZ_CLUSTER_NAME: dev
       KAFKA_BOOTSTRAP_SERVERS: "redpanda:9092"
       KAFKA_TRANSACTION_TOPIC: "transactions"
     volumes:
       - ".:/project"
     networks:
       - hznet

  redpanda:
    image: redpandadata/redpanda:v23.2.12
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:9092
    networks:
      - hznet

  kafka-ui:
    image: provectuslabs/kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: redpanda:9092
    ports:
      - 8000:8080
    networks:
      - hznet

  # status-service:
  #   image: amazoncorretto:21
  #   command: >
  #     java -Dhazelcast.client.config=/project/config/hazelcast-client.yaml 
  #       -jar /project/machine-status-service/target/machine-status-service-1.0-SNAPSHOT.jar
  #   environment:
  #     HZCLIENT_INSTANCENAME: status_service
  #     HZ_SERVERS: hz
  #     HZ_CLUSTER_NAME: dev
  #     hazelcast.pipeline.dispatcher.embed_hazelcast: false
  #     hazelcast.pipeline.dispatcher.request_timeout_ms: 2000
  #   volumes:
  #     - ".:/project"
  #   ports:
  #     - "8888:8080"
  #   networks:
  #     - hznet

  # performance-test:
  #   build:
  #     context: ./performance-test
  #   entrypoint: /project/performance-test/perftest.sh
  #   environment:
  #     HZ_SERVERS: hz
  #     HZ_CLUSTER_NAME: dev
  #   volumes:
  #     - ".:/project"
  #   ports:
  #     - "8089:8089"
  #   networks:
  #     - hznet

  # load-routing-config-1:
  #   image: amazoncorretto:21
  #   command: >
  #     java -cp /project/routing-tools/target/dependency/*
  #          -Dhazelcast.client.config=/project/config/cli-client.yaml 
  #          hazelcast.platform.solutions.pipeline.dispatcher.RoutingConfigTool load 
  #           --input /project/config/routing_1.json
  #   environment:
  #     HZCLIENT_INSTANCENAME: config_tool
  #   volumes:
  #     - ".:/project"
  #   networks:
  #     - hznet
  #   profiles:
  #     - disabled

  # load-routing-config-2:
  #   image: amazoncorretto:21
  #   command: >
  #     java -cp /project/routing-tools/target/dependency/*
  #          -Dhazelcast.client.config=/project/config/cli-client.yaml 
  #          hazelcast.platform.solutions.pipeline.dispatcher.RoutingConfigTool load 
  #          --input /project/config/routing_2.json
  #   environment:
  #     HZCLIENT_INSTANCENAME: config_tool
  #   volumes:
  #     - ".:/project"
  #   networks:
  #     - hznet

  # dump-routing-config:
  #   image: amazoncorretto:21
  #   command: >
  #     java -cp /project/routing-tools/target/dependency/*
  #          -Dhazelcast.client.config=/project/config/hazelcast-client.yaml 
  #          hazelcast.platform.solutions.pipeline.dispatcher.RoutingConfigTool dump 
  #          --output routes.json
  #   environment:
  #     HZCLIENT_INSTANCENAME: config_tool
  #   volumes:
  #     - ".:/project"
  #   networks:
  #     - hznet
  #   profiles:
  #     - disabled


networks:
  hznet: 
  
